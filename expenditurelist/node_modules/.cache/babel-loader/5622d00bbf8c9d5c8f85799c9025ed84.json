{"ast":null,"code":"var _jsxFileName = \"/Users/igayeong/Documents/react-project-1/src/component/Dialog.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from './Button';\nimport { useExpenitureDispatch } from './ExpenditureContext';\nconst DarkBackground = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  /* 세로 좌우 정렬 */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(0,0,0,0.8);\n`;\nconst DialogLayout = styled.div`\n  width: 270px;\n  padding: 1.5rem;\n  background: #fff;\n  border-radius: 5px;\n\n  h3 {\n    margin: 0;\n    font-size: 1.3rem;\n    font-weight: bold;\n    margin-bottom: 10px;\n  }\n  \n  `;\nconst DialogBlock = styled.div`\n  padding: 10px;\n\n  h4 {\n    margin: 0;\n    margin-bottom: 5px;\n    font-size: 1rem;\n    font-weight: bold;\n  }\n\n  input {\n    height: 20px;\n    width: 90%;\n    margin-bottom: 20px;\n    border-radius: 5px;\n    border: 2px solid #ced4da;\n  }\n\n  select {\n    height: 27px;\n    width: 92%;\n    border-radius: 5px;\n    border: 2px solid #ced4da;\n  }\n\n`;\nconst ButtonGroup = styled.div`\n  margin-top: 1.5rem;\n  display: flex;\n  justify-content: flex-end;\n\n  Button {\n    margin-right: 10px;\n    border-radius: 5px;\n    font-size: 0.9rem;\n    padding: 5px 10px;\n}\n`;\n\nfunction Dialog({\n  // title,\n  // children,\n  confirmText,\n  cancelText\n}) {\n  const nextId = useExpenitureNextId();\n  const dispatch = useExpenitureDispatch();\n\n  const onClick = e => {\n    dispatch({\n      type: 'CREATE',\n      item: {\n        id: nextId.current,\n        title: '병원 진료',\n        category: '',\n        // 임의로 원하는 카테고리를 지정해두기\n        amount: ''\n      }\n    });\n  };\n\n  const [inputs, setInputs] = useState({\n    title: '',\n    amount: ''\n  });\n  const {\n    title,\n    amount\n  } = inputs;\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs = { ...inputs,\n      [name]: value\n    };\n  }; // const onReset = () => {\n  //   setInputs = ({\n  //     ...inputs,\n  //     title: '',\n  //     amount: '',\n  //   })\n  // }\n\n\n  return /*#__PURE__*/React.createElement(DarkBackground, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(DialogBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"\\uB0B4\\uC6A9\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: title,\n    onChange: onChange,\n    value: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"\\uAE08\\uC561\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: amount,\n    onChange: onChange,\n    value: amount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"\\uCE74\\uD14C\\uACE0\\uB9AC\"), /*#__PURE__*/React.createElement(\"select\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"\\uC2DD\\uC0AC\"))), /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, cancelText), /*#__PURE__*/React.createElement(Button, {\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, confirmText))));\n}\n\nDialog.defaultProps = {\n  cancelText: ' 취소',\n  confirmText: ' 확인'\n};\nexport default Dialog;","map":{"version":3,"sources":["/Users/igayeong/Documents/react-project-1/src/component/Dialog.js"],"names":["React","useState","styled","Button","useExpenitureDispatch","DarkBackground","div","DialogLayout","DialogBlock","ButtonGroup","Dialog","confirmText","cancelText","nextId","useExpenitureNextId","dispatch","onClick","e","type","item","id","current","title","category","amount","inputs","setInputs","onChange","name","value","target","defaultProps"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport Button from './Button';\nimport { useExpenitureDispatch } from './ExpenditureContext';\n\n\nconst DarkBackground = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  /* 세로 좌우 정렬 */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(0,0,0,0.8);\n`\nconst DialogLayout = styled.div`\n  width: 270px;\n  padding: 1.5rem;\n  background: #fff;\n  border-radius: 5px;\n\n  h3 {\n    margin: 0;\n    font-size: 1.3rem;\n    font-weight: bold;\n    margin-bottom: 10px;\n  }\n  \n  `\nconst DialogBlock = styled.div`\n  padding: 10px;\n\n  h4 {\n    margin: 0;\n    margin-bottom: 5px;\n    font-size: 1rem;\n    font-weight: bold;\n  }\n\n  input {\n    height: 20px;\n    width: 90%;\n    margin-bottom: 20px;\n    border-radius: 5px;\n    border: 2px solid #ced4da;\n  }\n\n  select {\n    height: 27px;\n    width: 92%;\n    border-radius: 5px;\n    border: 2px solid #ced4da;\n  }\n\n`\nconst ButtonGroup = styled.div`\n  margin-top: 1.5rem;\n  display: flex;\n  justify-content: flex-end;\n\n  Button {\n    margin-right: 10px;\n    border-radius: 5px;\n    font-size: 0.9rem;\n    padding: 5px 10px;\n}\n`\n\nfunction Dialog({\n  // title,\n  // children,\n  confirmText,\n  cancelText,\n}) \n{\n  const nextId = useExpenitureNextId();\n  const dispatch = useExpenitureDispatch(); \n  const onClick = e => {\n    dispatch({\n      type: 'CREATE',\n      item: {\n        id: nextId.current,\n        title: '병원 진료',\n        category: '', // 임의로 원하는 카테고리를 지정해두기\n        amount: '',\n      }\n    })\n  }\n\n  const [inputs, setInputs] = useState({\n    title: '',\n    amount: '',\n  }) \n  const {title, amount} = inputs;\n\n  const onChange = e => {\n    const {name, value} = e.target;\n    setInputs = ({\n      ...inputs,\n      [name]: value,\n    })\n  }\n\n\n  // const onReset = () => {\n  //   setInputs = ({\n  //     ...inputs,\n  //     title: '',\n  //     amount: '',\n  //   })\n  // }\n\n  return (\n    <DarkBackground>\n      <DialogLayout>\n        <h3>{title}</h3>\n        <DialogBlock>\n          <h4>내용</h4>\n          <input name={title} onChange={onChange} value={title}/>\n          <h4>금액</h4>\n          <input name={amount} onChange={onChange} value={amount}/>\n          <h4>카테고리</h4>\n          <select>\n            <option>식사</option>\n          </select>\n        </DialogBlock>\n        <ButtonGroup>\n          <Button color='gray'> \n            {cancelText}\n          </Button>\n          <Button color='blue'>\n            {confirmText}\n          </Button>\n        </ButtonGroup>\n      </DialogLayout>\n    </DarkBackground>\n  )\n}\n\nDialog.defaultProps = {\n  cancelText: ' 취소',\n  confirmText: ' 확인',\n}\n\nexport default Dialog"]},"metadata":{},"sourceType":"module"}