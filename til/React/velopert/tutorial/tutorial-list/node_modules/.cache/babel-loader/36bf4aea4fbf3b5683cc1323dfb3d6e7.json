{"ast":null,"code":"var _jsxFileName = \"/Users/igayeong/Documents/PORTFOLIO/til/React/velopert/src/App.js\";\nimport React, { useRef, useMemo, useCallback, useReducer, createContext } from 'react'; // import Counter from './Counter'\n// import InputSample from './InputSample'\n\nimport UserList from './UserList2';\nimport CreateUser from './CreateUser';\nimport useInputs from './useInputs';\n\nfunction countActiveUsers(users) {\n  console.log('활성 세는중');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  users: [{\n    id: 1,\n    username: 'rkdud',\n    email: 'hap@ss',\n    active: true\n  }, {\n    id: 2,\n    username: 'rbgk',\n    email: 'pro@nn',\n    active: false\n  }, {\n    id: 3,\n    username: 'zzzz',\n    email: 'love@dd',\n    active: false\n  }]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    // case 'CHANGE_INPUT':\n    //   return {\n    //     ...state,\n    //     inputs: {\n    //       ...state.inputs,\n    //       [action.name]: action.value\n    //     }\n    //   }\n    case 'CREATE_USER':\n      return {\n        inputs: initialState.inputs,\n        users: state.users.concat(action.user)\n      };\n\n    case 'TOGGLE_USER':\n      return { ...state,\n        users: state.users.map(user => user.id === action.id ? { ...user,\n          active: !user.active\n        } : user)\n      };\n\n    case 'REMOVE_USER':\n      return { ...state,\n        users: state.users.filter(user => user.id !== action.id)\n      };\n\n    default:\n      throw new Error('unhandled action');\n  }\n}\n\nexport const UserDispatch = createContext(null);\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [form, onchange, reset] = useInputs({\n    username: '',\n    email: ''\n  });\n  const {\n    username,\n    email\n  } = form;\n  const nextId = useRef(4);\n  const {\n    users\n  } = state; // const {username, email} = state.inputs;\n  // e받아와서 특정작업, 컴포넌트 만들어질때 생성되어 앞으로는 재사용할 예정\n  // const onChange = useCallback(e => {\n  //   const {name, value} = e.target;\n  //   dispatch({\n  //     type:'CHANGE_INPUT',\n  //     name,\n  //     value,\n  //   })\n  // }, [])\n\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    nextId.current += 1;\n    reset();\n  }, [username, email, reset]);\n  const onToggle = useCallback(id => {\n    dispatch({\n      type: 'TOGGLE_USER',\n      id\n    });\n  }, []);\n  const onRemove = useCallback(id => {\n    dispatch({\n      type: 'REMOVE_USER',\n      id\n    });\n  }, []);\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(UserDispatch.Provider, {\n    value: dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(CreateUser, {\n    username: username,\n    email: email // onChange={onChange} \n    ,\n    onCreate: onCreate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(UserList, {\n    users: users,\n    onToggle: onToggle,\n    onRemove: onRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"\\uD65C\\uC131 \\uC0AC\\uC6A9\\uC790 \\uC218:\", count));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/igayeong/Documents/PORTFOLIO/til/React/velopert/src/App.js"],"names":["React","useRef","useMemo","useCallback","useReducer","createContext","UserList","CreateUser","useInputs","countActiveUsers","users","console","log","filter","user","active","length","initialState","id","username","email","reducer","state","action","type","inputs","concat","map","Error","UserDispatch","App","dispatch","form","onchange","reset","nextId","onCreate","current","onToggle","onRemove","count"],"mappings":"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","sourcesContent":["import React , {useRef, useMemo, useCallback, useReducer, createContext} from 'react';\n// import Counter from './Counter'\n// import InputSample from './InputSample'\nimport UserList from './UserList2';\nimport CreateUser from './CreateUser';\nimport useInputs from './useInputs';\n\nfunction countActiveUsers(users) {\n  console.log('활성 세는중');\n  return users.filter(user=>user.active).length;\n}\n\nconst initialState = {\n  users: [\n    {\n      id: 1,\n      username: 'rkdud',\n      email:'hap@ss',\n      active: true,\n    },\n    {\n      id: 2,\n      username: 'rbgk',\n      email:'pro@nn',\n      active: false,\n    },\n    {\n      id: 3,\n      username: 'zzzz',\n      email:'love@dd',\n      active: false,\n    }\n  ]\n}\n\nfunction reducer(state, action) {\n  switch(action.type) {\n    // case 'CHANGE_INPUT':\n    //   return {\n    //     ...state,\n    //     inputs: {\n    //       ...state.inputs,\n    //       [action.name]: action.value\n    //     }\n    //   }\n    case 'CREATE_USER':\n      return {\n        inputs: initialState.inputs,\n        users: state.users.concat(action.user)\n      }\n    case 'TOGGLE_USER':\n      return {\n        ...state,\n        users: state.users.map(user => \n          user.id === action.id\n            ? {...user, active: !user.active}\n            : user\n        )\n      }\n    case 'REMOVE_USER':\n      return {\n        ...state,\n        users: state.users.filter(user => user.id !== action.id)\n      }\n    default:\n      throw new Error('unhandled action');\n  }\n}\n\nexport const UserDispatch = createContext(null);\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [form, onchange, reset] = useInputs({\n    username: '',\n    email: '',\n  });\n  const {username, email} = form;\n  const nextId = useRef(4);\n  const {users} = state;\n  // const {username, email} = state.inputs;\n\n  // e받아와서 특정작업, 컴포넌트 만들어질때 생성되어 앞으로는 재사용할 예정\n  // const onChange = useCallback(e => {\n\n  //   const {name, value} = e.target;\n\n  //   dispatch({\n  //     type:'CHANGE_INPUT',\n  //     name,\n  //     value,\n  //   })\n  // }, [])\n\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email,\n      }\n    })  \n    nextId.current += 1\n    reset();\n  }, [username, email, reset])\n  \n  const onToggle = useCallback(id => {\n    dispatch({\n      type: 'TOGGLE_USER',\n      id\n    })\n  }, [])\n\n  const onRemove = useCallback(id => {\n    dispatch({\n      type: 'REMOVE_USER',\n      id\n    })\n  }, [])\n\n  const count = useMemo(() => countActiveUsers(users), [users] )\n  \n  return (\n    <div>\n      <UserDispatch.Provider value={dispatch}>\n        <CreateUser \n          username={username} \n          email={email} \n          // onChange={onChange} \n          onCreate={onCreate}\n        />\n        <UserList users={users} onToggle={onToggle} onRemove={onRemove} />\n      </UserDispatch.Provider>\n    <div>활성 사용자 수:{count}</div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}